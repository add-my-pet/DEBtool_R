detach("package:graphics", unload=TRUE)
library("GUTS", lib.loc="D:/Program Files/R/R-3.2.2/library")
install.packages("Rcpp")
library("Rcpp", lib.loc="D:/Program Files/R/R-3.2.2/library")
library("GUTS", lib.loc="D:/Program Files/R/R-3.2.2/library")
library("deSolve", lib.loc="D:/Program Files/R/R-3.2.2/library")
library("graphics", lib.loc="D:/Program Files/R/R-3.2.2/library")
detach("package:graphics", unload=TRUE)
detach("package:deSolve", unload=TRUE)
library("deSolve", lib.loc="D:/Program Files/R/R-3.2.2/library")
a <- 4
a
b.c <- 45
b.c
b
b <- list(type1 = 1:3, type2 = "gon")
b
b$type1
b$type1 <- "chines"
b
mydata_my_pet <- function {
## set metaData
metaData$phylum     <- "my_pet_phylum"
metaData$class      <- "my_pet_class"
metaData$order      <- "my_pet_order"
metaData$family     <- "my_pet_family"
metaData$species    <- "my_pet"
metaData$species_en <- "my_pet_english_name"
#metaData$T_typical  <- C2K(20)  # K, body temp
metaData$data_0     <- {"ab"; "ap"; "am"; "Lb"; "Lp"; "Li"; "Wdb"; "Wdp"; "Wdi"; "Ri"}   # tags for different types of zero-variate data
metaData$data_1     <- {"t-L"; "L-W"}  # tags for different types of uni-variate data
return(list(metaData))
}
mydata_my_pet <- function() {
## set metaData
metaData$phylum     <- "my_pet_phylum"
metaData$class      <- "my_pet_class"
metaData$order      <- "my_pet_order"
metaData$family     <- "my_pet_family"
metaData$species    <- "my_pet"
metaData$species_en <- "my_pet_english_name"
#metaData$T_typical  <- C2K(20)  # K, body temp
metaData$data_0     <- {"ab"; "ap"; "am"; "Lb"; "Lp"; "Li"; "Wdb"; "Wdp"; "Wdi"; "Ri"}   # tags for different types of zero-variate data
metaData$data_1     <- {"t-L"; "L-W"}  # tags for different types of uni-variate data
return(list(metaData))
}
MD <- mydata_my_pet
MD$phylum
MD
MD <- mydata_my_pet()
MD$phylum <- "my_pet_phylum"
MD
remove('MD')
MD
MD$phylum <- "my_pet_phylum"
MD <- list()
MD
MD$phylum <- "my_pet_phylum"
MD
## mydata_my_pet
# Sets referenced data
mydata_my_pet <- function() {
## set metaData
metadata <- list()
metaData$phylum     <- "my_pet_phylum"
metaData$class      <- "my_pet_class"
metaData$order      <- "my_pet_order"
metaData$family     <- "my_pet_family"
metaData$species    <- "my_pet"
metaData$species_en <- "my_pet_english_name"
#metaData$T_typical  <- C2K(20)  # K, body temp
metaData$data_0     <- {"ab"; "ap"; "am"; "Lb"; "Lp"; "Li"; "Wdb"; "Wdp"; "Wdi"; "Ri"}   # tags for different types of zero-variate data
metaData$data_1     <- {"t-L"; "L-W"}  # tags for different types of uni-variate data
return(list(metaData))
}
MD <- mydata_my_pet()
metaData <- list()
metaData$phylum     <- "my_pet_phylum"
metaData$class      <- "my_pet_class"
metaData$order      <- "my_pet_order"
metaData$family     <- "my_pet_family"
metaData$species    <- "my_pet"
metaData$species_en <- "my_pet_english_name"
#metaData$T_typical  <- C2K(20)  # K, body temp
metaData$data_0     <- {"ab"; "ap"; "am"; "Lb"; "Lp"; "Li"; "Wdb"; "Wdp"; "Wdi"; "Ri"}   # tags for different types of zero-variate data
metaData$data_1     <- {"t-L"; "L-W"}  # tags for different types of uni-variate data
return(list(metaData))
}
mydata_my_pet <- function() {
## set metaData
metaData <- list()
metaData$phylum     <- "my_pet_phylum"
metaData$class      <- "my_pet_class"
metaData$order      <- "my_pet_order"
metaData$family     <- "my_pet_family"
metaData$species    <- "my_pet"
metaData$species_en <- "my_pet_english_name"
#metaData$T_typical  <- C2K(20)  # K, body temp
metaData$data_0     <- {"ab"; "ap"; "am"; "Lb"; "Lp"; "Li"; "Wdb"; "Wdp"; "Wdi"; "Ri"}   # tags for different types of zero-variate data
metaData$data_1     <- {"t-L"; "L-W"}  # tags for different types of uni-variate data
return(list(metaData))
}
MD <- mydata_my_pet()
MD
mydata_my_pet <- function() {
## set metaData
metaData <- list()
metaData$phylum     <- "my_pet_phylum"
metaData$class      <- "my_pet_class"
metaData$order      <- "my_pet_order"
metaData$family     <- "my_pet_family"
metaData$species    <- "my_pet"
metaData$species_en <- "my_pet_english_name"
#metaData$T_typical  <- C2K(20)  # K, body temp
metaData$data_0     <- c("ab", "ap", "am", "Lb", "Lp", "Li", "Wdb", "Wdp", "Wdi", "Ri")   # tags for different types of zero-variate data
metaData$data_1     <- c("t-L", "L-W")  # tags for different types of uni-variate data
return(list(metaData))
}
MD <- mydata_my_pet()
MD
MD[['species']]
MD[["species"]]
l <- list(a= 1:3,b = 1:10)
ind <- "a"
l[[ind]]
l[["a"]]
l
MD[[1]]
MD[[1]][[''species""]]
MD[[1]][["species"]]
list(MD) <- mydata_my_pet()
c(MD) <- mydata_my_pet()
list[MD] <- mydata_my_pet()
remove(MD)
list[MD] <- mydata_my_pet()
functionReturningTwoValues <- function() { return(c(1, 2)) }
list[a, b] <- functionReturningTwoValues()
library(devtools)
source_url("https://raw.githubusercontent.com/ggrothendieck/gsubfn/master/R/list.R")
install.packages("devtools")
library("devtools", lib.loc="D:/Program Files/R/R-3.2.2/library")
list[a] <- mydata_my_pet()
list[a, b] <- functionReturningTwoValues()
functionReturningTwoValues()
mydata_my_pet <- function() {
## set metaData
metaData <- list()
metaData$phylum     <- "my_pet_phylum"
metaData$class      <- "my_pet_class"
metaData$order      <- "my_pet_order"
metaData$family     <- "my_pet_family"
metaData$species    <- "my_pet"
metaData$species_en <- "my_pet_english_name"
#metaData$T_typical  <- C2K(20)  # K, body temp
metaData$data_0     <- c("ab", "ap", "am", "Lb", "Lp", "Li", "Wdb", "Wdp", "Wdi", "Ri")   # tags for different types of zero-variate data
metaData$data_1     <- c("t-L", "L-W")  # tags for different types of uni-variate data
metaData$COMPLETE = 2.5   # using criteria of LikaKear2011
metaData$author   = "FirstName1 LastName1"              # put names as authors as separate strings:  {'FirstName1 LastName2','FirstName2 LastName2'} , with corresponding author in first place
metaData$date_subm = c(2015, 04, 20)                    # [year month day], date at which the entry is submitted
metaData$email    = "myname@myuniv.univ"                # e-mail of corresponding author
metaData$address  = "affiliation, zipcode, country"     # affiliation, postcode, country of the corresponding author
# uncomment and fill in the following fields when the entry is updated:
# metaData$author_mod_1  = "FirstName3 LastName3"            # put names as authors as separate strings:  {'author1','author2'} , with corresponding author in first place
# metaData$date_mod_1    = c(2015, 04, 20)                   # [year month day], date modified entry is accepted into the collection
# metaData$email_mod_1   = "myname@myuniv.univ"              # e-mail of corresponding author
# metaData$address_mod_1 = "affiliation, zipcode, country"   # affiliation, postcode, country of the corresponding author
## set data
# zero-variate data;
# typically depend on scaled functional response f.
# here assumed to be equal for all real data; the value of f is specified in pars_init_my_pet.
# add an optional comment structure to give any additional explanations on
# how the value was chosen, see the last column of the ab data set for an
# example
# age 0 is at onset of embryo development
data$ab = 15;      units$ab = 'd';    label$ab = 'age at birth';  bibkey$ab = 'MollCano2010';   comment$ab  = 'mean value taken from several measurements';
return(list(data, metaData))
}
md <- mydata_my_pet
md
remove(md)
md <- mydata_my_pet()
mydata_my_pet <- function() {
metaData <- list(); data <- list(); units <- list(); label <- list(); bibkey <- list(); comment <- list();
## set metaData
metaData$phylum     <- "my_pet_phylum"
metaData$class      <- "my_pet_class"
metaData$order      <- "my_pet_order"
metaData$family     <- "my_pet_family"
metaData$species    <- "my_pet"
metaData$species_en <- "my_pet_english_name"
#metaData$T_typical  <- C2K(20)  # K, body temp
metaData$data_0     <- c("ab", "ap", "am", "Lb", "Lp", "Li", "Wdb", "Wdp", "Wdi", "Ri")   # tags for different types of zero-variate data
metaData$data_1     <- c("t-L", "L-W")  # tags for different types of uni-variate data
metaData$COMPLETE = 2.5   # using criteria of LikaKear2011
metaData$author   = "FirstName1 LastName1"              # put names as authors as separate strings:  {'FirstName1 LastName2','FirstName2 LastName2'} , with corresponding author in first place
metaData$date_subm = c(2015, 04, 20)                    # [year month day], date at which the entry is submitted
metaData$email    = "myname@myuniv.univ"                # e-mail of corresponding author
metaData$address  = "affiliation, zipcode, country"     # affiliation, postcode, country of the corresponding author
# uncomment and fill in the following fields when the entry is updated:
# metaData$author_mod_1  = "FirstName3 LastName3"            # put names as authors as separate strings:  {'author1','author2'} , with corresponding author in first place
# metaData$date_mod_1    = c(2015, 04, 20)                   # [year month day], date modified entry is accepted into the collection
# metaData$email_mod_1   = "myname@myuniv.univ"              # e-mail of corresponding author
# metaData$address_mod_1 = "affiliation, zipcode, country"   # affiliation, postcode, country of the corresponding author
## set data
# zero-variate data;
# typically depend on scaled functional response f.
# here assumed to be equal for all real data; the value of f is specified in pars_init_my_pet.
# add an optional comment structure to give any additional explanations on
# how the value was chosen, see the last column of the ab data set for an
# example
# age 0 is at onset of embryo development
data$ab = 15;      units$ab = 'd';    label$ab = 'age at birth';  bibkey$ab = 'MollCano2010';   comment$ab  = 'mean value taken from several measurements';
return(list(data, metaData))
}
md <- mydata_my_pet()
md
xxx$v1 = 50
C2K(20)
C2K <- function(C) {
## Description
# Obtains Kelvin from temperatures defined in Celsius
#
# Input
#
# * C: scalar or matrix in temperatures in degrees Celsius
#
# Output
#
# * K: temperature(s) in Kelvin
## Example
# C2K(20)
K <- C + 273.15   # K, temperature in Kelvin
return(K)
}
c2K(20)
C2K(20)
getwd
getwd()
help(prompt)
help(help)
C2K(20)
help(C2K)
??C2K
help(prompt)
help(sum)
open(sum)
library('devtools')
library('roxygen2')
